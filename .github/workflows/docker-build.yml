name: Docker Build & Push

on:
  workflow_dispatch:
    inputs:
      buildConfiguration:
        description: 'Build Configuration'
        required: true
        default: 'Test'
        type: choice
        options:
          - Test
          - Release
      featureName:
        description: 'Feature Name (optional for Test, defaults to sidf2)'
        required: false
      versionNumber:
        description: 'Version Number (optional for Test)'
        required: false

env:
  REGISTRY: docker.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Read version from package.json
        id: pkg
        run: |
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Sanitize feature name and set tag/repo
        id: vars
        run: |
          CONFIG="${{ github.event.inputs.buildConfiguration }}"
          VERSION="${{ steps.pkg.outputs.version }}"
          FEATURE_NAME="${{ github.event.inputs.featureName }}"
          VERSION_NUMBER="${{ github.event.inputs.versionNumber }}"

          if [[ "$CONFIG" == "Release" ]]; then
            TAG="release.v.$VERSION"
            REPO="qaema/sidf-frontend"
          else
            # Use default if featureName is empty
            if [[ -z "$FEATURE_NAME" ]]; then
              FEATURE_NAME="sidf2"
            fi

            # Replace non-alphanumeric (except - and .) with -
            SANITIZED_NAME=$(echo "$FEATURE_NAME" | sed 's/[^a-zA-Z0-9.-]/-/g')
            FINAL_VERSION=${VERSION_NUMBER:-1.0.0}
            TAG="$SANITIZED_NAME.v.$FINAL_VERSION"
            REPO="qaema/sidf-frontend-nonprod"
          fi

          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.tag }}
